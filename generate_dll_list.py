"""Generate the file delvewheel/dll_list.py"""

f = open('delvewheel/dll_list.py', 'w')
f.write("""\
\"\"\"This file was generated by generate_dll_list.py. Do not edit.\"\"\"
""")
f.write('import re\n')

f.write(r"""
# ignore_names_32 is a set containing the lowercase names of all DLLs that can
# be assumed to be present on 32-bit Windows 7 or later. The set is generated
# from the file SysWOW64.txt, which is a list of all files with extension .dll
# or .drv found in C:\Windows\SysWOW64 on a vanilla Windows 7 Ultimate SP1
# 64-bit installation.
""")
f.write('ignore_names_32 = {\n')
with open('SysWOW64.txt') as txt_file:
    for line in txt_file:
        f.write(f"    '{line.strip().lower()}',\n")
f.write('}\n')

f.write(r"""
# ignore_names_64 is a set containing the lowercase names of all DLLs that can
# be assumed to be present on 64-bit Windows 7 or later. The set is generated
# from the file System32.txt, which is a list of all files with extension .dll
# or .drv found in C:\Windows\System32 on a vanilla Windows 7 Ultimate SP1
# 64-bit installation.
""")
f.write('ignore_names_64 = {\n')
with open('SysWOW64.txt') as txt_file:
    for line in txt_file:
        f.write(f"    '{line.strip().lower()}',\n")
f.write('}\n')

f.write(r"""
# set of regular expressions for additional DLLs to ignore
ignore_regexes = {
    re.compile(r'^python[0-9]+\.dll$'),  # included in Python distribution
    re.compile(r'^api-'),  # let Windows handle API sets
}
""")

f.write(r"""
# Prefixes of DLLs whose names should not be mangled. These either have extra
# data after the PE file proper (and thus cannot be modified by
# machomachomangler) or already have the version in the filename.
no_mangle_prefixes = {
    'vcruntime',
    'vccorlib',
    'msvcp',
    'concrt',
    'mfc',
    'vcamp',
    'vcomp',
}
""")

f.close()
